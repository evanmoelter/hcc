---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.2.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system

  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback
  uninstall:
    keepHistory: false

  values:

    global:
      deploymentStrategy:
        type: RollingUpdate
      envFrom:
        - secretRef:
            name: &secret authentik-secret
      env:
        - name: AUTHENTIK_POSTGRESQL__USE_PGBOUNCER
          value: "true"
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: *secret

    authentik:
      error_reporting:
        enable: false
        send_pii: false
      postgresql:
        host: &db_host ${CNPG_CLUSTER_HOST}
        name: &db_name authentik
      redis:
        host: dragonfly.database.svc.cluster.local
      email:
        host: smtp-relay.gmail.com
        port: 587
        use_tls: true
        from: sso@${SECRET_DOMAIN}
      log_level: info

    server:
      autoscaling:
        enabled: true
        minReplicas: 1
      initContainers:
        - name: init-db
          image: ghcr.io/evanmoelter/postgres-init:16.2@sha256:4227543bc35320a9a1734312cd5a27c2b2811feadeb9cd1363b0c2b35dd7383f
          imagePullPolicy: IfNotPresent
          env:
            - name: INIT_POSTGRES_HOST
              value: *db_host
            - name: INIT_POSTGRES_DBNAME
              value: *db_name
            - name: INIT_POSTGRES_SUPER_USER
              value: ${CNPG_POSTGRES_SUPER_USER}
            - name: INIT_POSTGRES_SUPER_PASS
              value: ${CNPG_POSTGRES_SUPER_PASS}
          envFrom:
            - secretRef:
                name: *secret
      metrics:
        prometheus:
          serviceMonitor:
            enabled: true
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        #   nginx.ingress.kubernetes.io/enable-global-auth: "false"
        #   nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        #   nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - &host sso.${SECRET_DOMAIN}
        tls:
        - hosts:
            - *host

    worker:
      autoscaling:
        enabled: true
        minReplicas: 1

    postgresql:
      enabled: false
    redis:
      enabled: false
