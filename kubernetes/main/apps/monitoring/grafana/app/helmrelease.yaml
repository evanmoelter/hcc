---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app grafana
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 9.2.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 2
    podAnnotations:
      reloader.stakater.com/auto: "true"
    env:
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_SECURITY_COOKIE_SAMESITE: *app
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth.basic:
        enabled: false
        disable_login_form: true
      auth.anonymous:
        enabled: true
        org: Stuff
        org_role: Editor
    deploymentStrategy:
      type: RollingUpdate
    resources:
      requests:
        cpu: 23m
        memory: 127M
      limits:
        memory: 219M
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          # - name: cilium
          #   orgId: 1
          #   folder: Cilium
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/cilium
          # - name: data
          #   orgId: 1
          #   folder: Data
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/data
          # - name: flux
          #   orgId: 1
          #   folder: Flux
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/flux
          # - name: kubernetes
          #   orgId: 1
          #   folder: Kubernetes
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/kubernetes
          # - name: network
          #   orgId: 1
          #   folder: Network
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   options:
          #     path: /var/lib/grafana/dashboards/network
          # - name: system
          #   orgId: 1
          #   folder: System
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   allowUiUpdates: true
          #   options:
          #     path: /var/lib/grafana/dashboards/system
          - name: teslamate
            orgId: 1
            folder: Teslamate
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/teslamate
          # - name: thanos
          #   orgId: 1
          #   folder: Thanos
          #   type: file
          #   disableDeletion: false
          #   editable: true
          #   allowUiUpdates: true
          #   options:
          #     path: /var/lib/grafana/dashboards/thanos
    datasources:
      datasources.yaml:
        apiVersion: 1
        # deleteDatasources:
        #   - { name: Alertmanager, orgId: 1 }
        #   - { name: Loki, orgId: 1 }
        #   - { name: Prometheus, orgId: 1 }
        datasources:
          # - name: Prometheus
          #   type: prometheus
          #   uid: prometheus
          #   isDefault: true
          #   access: proxy
          #   url: http://thanos-query-frontend.monitoring.svc.cluster.local:10902
          #   jsonData:
          #     prometheusType: Thanos
          # - name: Loki
          #   type: loki
          #   uid: loki
          #   access: proxy
          #   url: http://loki-gateway.monitoring.svc.cluster.local
          #   jsonData:
          #     maxLines: 250
          # - name: Alertmanager
          #   type: alertmanager
          #   access: proxy
          #   url: http://alertmanager.monitoring.svc.cluster.local:9093
          #   jsonData:
          #     implementation: prometheus
          - name: teslamate
            type: postgres
            access: proxy
            url: cnpg-cluster-r.database.svc.cluster.local:5432
            database: teslamate
            user: $TESLAMATE_DB_USER
            secureJsonData:
              password: $TESLAMATE_DB_PASSWORD
    dashboards:
      # data:
      #   cloudnative-pg:
      #     url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
      #     datasource: Prometheus
      #   dragonfly:
      #     url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
      #     datasource: Prometheus
      # default:
      #   # TODO
      # flux:
      #   flux-cluster:
      #     url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
      #     datasource: Prometheus
      #   flux-control-plane:
      #     url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
      #     datasource: Prometheus
      #   flux-logs:
      #     url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
      #     datasource: Prometheus
      # kubernetes:
      #   kubernetes-api-server:
      #     # renovate: depName="Kubernetes / System / API Server"
      #     gnetId: 16761
      #     revision: 16
      #     datasource: Prometheus
      #   kubernetes-coredns:
      #     # renovate: depName="Kubernetes / System / CoreDNS"
      #     gnetId: 15762
      #     revision: 20
      #     datasource: Prometheus
      #   kubernetes-global:
      #     # renovate: depName="Kubernetes / Views / Global"
      #     gnetId: 15757
      #     revision: 43
      #     datasource: Prometheus
      #   kubernetes-namespaces:
      #     # renovate: depName="Kubernetes / Views / Namespaces"
      #     gnetId: 15758
      #     revision: 42
      #     datasource: Prometheus
      #   kubernetes-nodes:
      #     # renovate: depName="Kubernetes / Views / Nodes"
      #     gnetId: 15759
      #     revision: 35
      #     datasource: Prometheus
      #   kubernetes-pods:
      #     # renovate: depName="Kubernetes / Views / Pods"
      #     gNetId: 15760
      #     revision: 21
      #     datasource: Prometheus
      #   kubernetes-volumes:
      #     # renovate: depName="K8s / Storage / Volumes / Cluster"
      #     gnetId: 11454
      #     revision: 14
      #     datasource: Prometheus
      # network:
      #   cert-manager:
      #     url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
      #     datasource: Prometheus
      #   cloudflared:
      #     # renovate: depName="Cloudflare Tunnels (cloudflared)"
      #     gnetId: 17457
      #     revision: 6
      #     datasource:
      #       - name: DS_PROMETHEUS
      #         value: Prometheus
      #   external-dns:
      #     # renovate: depName="External-dns"
      #     gnetId: 15038
      #     revision: 3
      #     datasource: Prometheus
      #   nginx:
      #     url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
      #     datasource: Prometheus
      #   nginx-request-handling-performance:
      #     url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
      #     datasource: Prometheus
      teslamate:
        battery-health:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/battery-health.json
          datasource: teslamate
        charge-level:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charge-level.json
          datasource: teslamate
        charges:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charges.json
          datasource: teslamate
        charging-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/charging-stats.json
          datasource: teslamate
        database-info.json:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/database-info.json
          datasource: teslamate
        drive-stats:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drive-stats.json
          datasource: teslamate
        drives:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/drives.json
          datasource: teslamate
        efficiency:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/efficiency.json
          datasource: teslamate
        locations:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/locations.json
          datasource: teslamate
        mileage:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/mileage.json
          datasource: teslamate
        overview:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/overview.json
          datasource: teslamate
        projected-range:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/projected-range.json
          datasource: teslamate
        states:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/states.json
          datasource: teslamate
        statistics:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/statistics.json
          datasource: teslamate
        timeline:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/timeline.json
          datasource: teslamate
        trip:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/trip.json
          datasource: teslamate
        updates:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/updates.json
          datasource: teslamate
        vampire-drain:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/vampire-drain.json
          datasource: teslamate
        visited:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/visited.json
          datasource: teslamate
        charge-details:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/internal/charge-details.json
          datasource: teslamate
        drive-details:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/internal/drive-details.json
          datasource: teslamate
        home-assistant:
          url: https://raw.githubusercontent.com/teslamate-org/teslamate/master/grafana/dashboards/internal/home.json
          datasource: teslamate
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-piechart-panel
      - grafana-polystat-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel
      - speakyourcode-button-panel
      - snuids-trafficlights-panel
    serviceMonitor:
      enabled: true
    # TODO: switch to routes
    # route:
    #   main:
    #     enabled: true
    #     hostnames:
    #       - grafana.${SECRET_DOMAIN}
    #     # TODO
    ingress:
      enabled: true
      ingressClassName: internal
      hosts:
        - &host grafana.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
